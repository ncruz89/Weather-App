{"mappings":"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","sources":["js/script.js"],"sourcesContent":["const tempContainer = document.querySelector(\".temp\");\r\nconst windContainer = document.querySelector(\".wind\");\r\nconst unitToggleBtn = document.querySelector(\".toggle-btn\");\r\nconst ToggleBtnInnerCircle = document.querySelector(\".inner-circle\");\r\nconst unitHeader = document.querySelector(\".unit-header\");\r\nconst searchBar = document.querySelector(\".search-bar\");\r\nconst searchBtn = document.querySelector(\".search button\");\r\n\r\nlet currSearch = \"\";\r\n\r\n// weather class\r\nconst weather = {\r\n  api_key: \"1d0a5272af38a018174b126e2c5e4226\",\r\n  locData: {},\r\n\r\n  /**\r\n   * fetch weather simply fetches weather data from openweathermap api\r\n   *\r\n   * @param {String} city - city name to be searched\r\n   * @param {String} [unit = 'imperial']- units to be used in weather. default imperial units\r\n   */\r\n  fetchWeather: function (city, unit = \"imperial\") {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${this.api_key}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => this.displayWeather(data, unit))\r\n      .catch((e) => console.log(e, \"ðŸ’¥\"));\r\n  },\r\n  /**\r\n   * function that displays all the weather information for the client\r\n   *\r\n   * @param {Object} data - an object containing the response data from openweathermap api fetch\r\n   * @param {String} unit - the current units being used\r\n   */\r\n  displayWeather: function (data, unit) {\r\n    console.log(data);\r\n    const { name } = data;\r\n    const { icon, description } = data.weather[0];\r\n    const { temp, humidity } = data.main;\r\n    const { speed } = data.wind;\r\n\r\n    document.querySelector(\".city\").innerText = `Weather in ${name}`;\r\n    document.querySelector(\r\n      \".icon\"\r\n    ).src = `http://openweathermap.org/img/wn/${icon}.png`;\r\n    document.querySelector(\".description\").innerText = description;\r\n    tempContainer.innerHTML =\r\n      Math.round(temp) + `${unit === \"imperial\" ? \" &#x2109\" : \" &#8451\"}`;\r\n    document.querySelector(\".humidity\").innerText = `Humidity: ${humidity}%`;\r\n    windContainer.innerText =\r\n      \"Wind speed: \" +\r\n      Math.round(speed) +\r\n      `${unit === \"imperial\" ? \" mp/h\" : \" km/h\"}`;\r\n    document.querySelector(\".weather\").classList.remove(\"loading\");\r\n    document.body.style.backgroundImage = `url('https://source.unsplash.com/1920x1080/?${name}&content_filter=high&topics=id_or_slug')`;\r\n  },\r\n  // function that grabs search bar value and sends it to fetchWeather() function in weather class\r\n  search: function () {\r\n    if (!searchBar.value) return;\r\n    unitToggleBtn.classList.remove(\"active\");\r\n    currSearch = searchBar.value;\r\n    this.fetchWeather(currSearch);\r\n    searchBar.value = \"\";\r\n  },\r\n};\r\n\r\n// listen to click on search or enter button to call weather.search()\r\nsearchBtn.addEventListener(\"click\", function () {\r\n  weather.search();\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", function (e) {\r\n  console.log(e);\r\n  if (e.key === \"Enter\") weather.search();\r\n});\r\n\r\n// toggle button that switches between metric and imperial units\r\nunitToggleBtn.addEventListener(\"click\", function () {\r\n  console.log(currSearch);\r\n  if (this.classList.contains(\"active\")) {\r\n    this.classList.remove(\"active\");\r\n    unitHeader.innerHTML = \"&#x2109\";\r\n    weather.fetchWeather(currSearch);\r\n  } else if (!this.classList.contains(\"active\")) {\r\n    this.classList.add(\"active\");\r\n    unitHeader.innerHTML = \"&#8451\";\r\n    weather.fetchWeather(currSearch, \"metric\");\r\n  }\r\n});\r\n\r\n// on app start grab user location data\r\nwindow.addEventListener(\"load\", function () {\r\n  const getLocation = function () {\r\n    return new Promise(function (resolve, reject) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => resolve(position),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  };\r\n  // reverse geocode user location\r\n  const location = async function () {\r\n    try {\r\n      const pos = await getLocation();\r\n      const { latitude: lat, longitude: lng } = pos.coords;\r\n      console.log(lat, lng);\r\n      const revGeo = await fetch(`https://geocode.xyz/${lat},${lng}?json=1`);\r\n      console.log(revGeo);\r\n      if (!revGeo.ok) {\r\n        console.log(revGeo);\r\n        // geocode.xyz likes to throw 403 errors for a reason i couldn't find on client side\r\n        // here's a work around\r\n        if (revGeo.status === 403) return window.location.reload();\r\n        throw new Error(\"Problem getting your location data\");\r\n      }\r\n      locData = await revGeo.json();\r\n      currSearch = locData.city;\r\n      weather.fetchWeather(currSearch);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  location();\r\n});\r\n"],"names":[],"version":3,"file":"index.1c974c2f.js.map","sourceRoot":"/__parcel_source_root/"}